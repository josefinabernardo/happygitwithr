---
title: "Happy Git and Github for the useR<BR>Session 03 - Early Github Wins"
subtitle: "Boook club R-Ladies Bergen, R-Ladies Den Bosch, R-Ladies Amsterdam"
author: "Book by Jenny, presentation by Martine"
format: 
  rladies-revealjs:
    embed-resources: true  # uncomment for making a selfcontained html for sharing
    slide-number: true
    pdf-max-pages-per-slide: 1
    footer: "[Boook club R-Ladies Bergen, R-Ladies Den Bosch, R-Ladies Amsterdam]"
    incremental: true
---

```{r}
library(fontawesome) # 0.4.0

```


## Some house rules

-  R-Ladies is dedicated to providing a harassment-free experience for everyone
-  We do not tolerate harassment of participants in any form
-  See [the code of conduct](https://rladies.org/coc/)


## Program for today

-  Get started with GitHub
    -  15 New project, GitHub first
    -  16 Existing project, GitHub first
    -  17 Existing project, GitHub last
    -  18 Test drive R Markdown
    -  19 Render an R script
-  Git fundamentals?

## Get started with GitHub

-  New project?
    -  Easiest way: GitHub first
-  Existing project?
    -  GitHub first: pragmatic
    -  GitHub last: more proper way to connect, especially if already a Git history
    
    
# Chp 15 - New project, Github first {.inverse}   
    
## New project? Easiest way: GitHub first - Why?

-  Also sets up local Git repo for immediate pulling and pushing
-  Under the hood, we are doing `git clone`
-  The remote GitHub repo is configured as the origin remote for your local repo and your local main branch is now tracking the main on GitHub

## New project? Easiest way: GitHub first - Steps 1/n

-  Make a repo on GitHub
![](newrepo.png){.fragment}  
-  Click the big green “<> Code” button, and copy a clone URL to your clipboard
![](copyurl.png){.fragment}

## New project? Easiest way: GitHub first - Steps 2/n

-  Make a new RStudio Project preferably via (run in *any*     RConsole / R session):  

. . .

```{r}
#| eval: false
#| echo: true
usethis::create_from_github(
  repo_spec = "https://github.com/YOU/YOUR_REPO.git",
  destdir = "~/path/to/where/you/want/the/local/repo/"
)
```

. . . 

-  This creates a new local directory in `destdir`, which is:
   -  a directory or folder on your computer
   -  a Git repository, linked to a remote GitHub repository
   -  an RStudio Project
-  This opens a new RStudio instance in the new Project
-  In the absence of other constraints, Jenny suggest that all of your R projects have exactly this set-up.


## New project? Easiest way: GitHub first - work, save & commit {.smaller}

-  Work on project, then click on `Git` tab:
![](git.png){.fragment}
-  Open `commit` screen by click on `Commit` button in git menu:

:::: {.columns}

::: {.column .fragment width='60%'}
![](commit.png)
:::

::: {.column  width='40%'}

-  check boxes of things you like to commit
-  add `Commit` message
-  hit `Commit` button at bottom
:::

::::


## New project? Easiest way: GitHub first - push {.smaller}

-  New work in your local Git repository, not online yet
-  **Pull** from GitHub 
    -  Why? Establish this habit for the future! If you make changes to the repo in the browser or from another machine or (one day) a collaborator has pushed, you will be happier if you pull those changes in before you attempt to push.

![](pull.png){.fragment}

-  Probably nothing will happen, i.e. you’ll get the message “Already up-to-date.” This is just to establish a habit.

-  Click the green “Push” button to send your local changes to GitHub:
![](push.png){.fragment}

## New project? Easiest way: GitHub first - push {.smaller}  

-  But then this happened `r fa("face-frown", fill = "purple")` ![](fatalerror.png){.fragment}
-  I found this: <https://forum.posit.co/t/issues-with-pushing-from-rstudi-to-git/126509>
-  I realised indeed my PAT had changed
-  The webpage <https://carpentries.github.io/sandpaper-docs/github-pat.html> advised `usethis::git_sitrep()` and after running that I discovered:
    -  Yes, my PAT could be the problem
    -  An advise to read Chp 25 of the book we are reading  <https://happygitwithr.com/common-remote-setups.html>  `r fa("face-laugh-beam", fill = "purple")`
-  I ran `gitcreds::gitcreds_set()` and entered my PAT when asked
-  Then I checked again `usethis::git_sitrep()` and saw it was oke
-  Tried pushing again (after a pull  `r fa("face-smile", fill = "purple")` ) and it worked  `r fa("face-smile-beam", fill = "purple")`  `r fa("face-smile-beam", fill = "purple")`  `r fa("face-smile-beam", fill = "purple")`


## {background-color="#5C8DA9" background-image="zen.gif" background-size="contain"}

# Chp 16 - Existing project, Github first {.inverse}

## Existing project, GitHub first - Make repo

-  slightly goofy way, in order to avoid using Git at the command line
-  not for always, but nice for starters
-  more options in the book, this seems to be the preferred

1.  Have all your files for your R project in the same folder
2.  Make a new repo on github
3.  Now click the green “<> Code” button and copy the URL
4.  In *any* R-session, run:

. . .  
```{r}
#| eval: false
#| echo: true
usethis::create_from_github(
  repo_spec = "https://github.com/YOU/YOUR_REPO.git",
  destdir = "~/path/to/the/folder/in/step/1/"
)
```

. . . 

*So far not so different from "New project, github first"*


## Existing project, Github first - demo 1/2 {.smaller}

1.  Made an R-project in a folder: ![](project.png){width="20%"}
2.  Made a test repo on github 
3.  and copied the url 
4.  Ran the code

. . .  

```{r}
#| eval: false
#| echo: true
usethis::create_from_github(
  repo_spec = "https://github.com/YOU/YOUR_REPO.git",
  destdir = "~/path/to/the/folder/in/step/1/")
```

. . .  
 
 Ran into:
 
 ![](projectinproject.png){.fragment}

. . . 

Conclusion: JUST have the FILES in a folder, not already a project

## Existing project, Github first - demo 2/2

::: columns
::: {.column width="40%"}
-  So I removed project stuff:  
![](justfiles.png){.fragment}
-  reran the code
-  the result:  
![](project_result.png){.fragment}
:::
::: {.column width="60%"}
-  `Test` is the copied Rproj:  
![](projectinfolder.png){.fragment}
-  move files from `Testproject` to `Test`:  
![](moved.png){.fragment}

:::
:::

## Existing project, Github first - content in


::: columns
::: {.column width="60%"}
-  So after the local project is there, relocate the files to that folder
-  Open the project in RStudio
-  All the files should be here if your move/copy was successful
-  Are they showing up in the Git pane with questions marks? They should be appearing as new untracked files.
:::
::: {.column width="40%" .fragment}

![](gitpanefiles.png)
:::
:::

## Existing project, Github first - stage commit {.smaller}


-  Click `Git` tab, check “Staged” box for all files you want to commit.
-  Default: stage it.
-  When to reconsider: *this will all go to GitHub. Consider if that is appropriate for each file. You can absolutely keep a file locally, without committing it to the Git repo and sending to GitHub. Just let it sit there in your Git pane, without being staged. No harm will be done.*    
*If this is a long-term situation, list the file in .gitignore.*
-  If you’re not already in the Git pop-up, click `Commit` to open window
-  Type a message in `Commit message`, such as “Init project XYZ”, and click `Commit` button below 
![](commit_init.png){.fragment width="80%"}

##  Existing project, Github first - what to commit? {.smaller}

-  .Rhistory probably not
-  .RProj?
    -  Posit says **yes** at  
    <https://forum.posit.co/t/should-rproj-files-be-added-to-gitignore/1269/2>
-  .gitignore?
    -  People say **yes** at  
    <https://stackoverflow.com/questions/5765645/should-you-commit-gitignore-into-the-git-repos> and  
    <https://stackoverflow.com/questions/767147/how-can-i-stop-gitignore-from-appearing-in-the-list-of-untracked-files>
    
## Existing project, Github first - push and check

- We are now a branche ahead ![](brancheahead.png){.fragment}
- Push and check on github ![](checkgithub.png){.fragment width="70%"}


## {background-color="#5C8DA9" background-image="zen.gif" background-size="contain"}

# Chp 17 - Existing project, Github last {.inverse}

# Chp 18 - test drive R Markdown {.inverse}

# Chp 19 - Render an R script {.inverse}

## The end of session 3!

-   **Meetup for the Chapters**
    -   [R-Ladies Amsterdam](https://www.meetup.com/rladies-amsterdam/)
    -   [R-Ladies Bergen](https://www.meetup.com/rladies-bergen/)
    -   [R-Ladies Den Bosch](https://www.meetup.com/nl-NL/rladies-den-bosch/)

-   **We need YOU as a presenter!**
    -  choose your own way of presenting: quarto-revealjs, ppt, ...



```{r, eval = FALSE}
pagedown::chrome_print("session_03_earlygithubwins.html")

```


